---
title: "Analysis"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Libraries

```{r}
library(tidyverse)
library(googlesheets4)
library(base64enc)

```

# Changes to company analysis

## Data

```{r}
ss <- "https://docs.google.com/spreadsheets/d/1xzpre5Ej_7OEGRU4EA7KZuMQnSz5YCyTx5Sdbml6bQE/edit#gid=0"

file_companies <- read_sheet(ss, sheet = "CompanyAnalysis")
file_mainpage <- read_sheet(ss, sheet = "Main")
file_locations <- read_sheet(ss, sheet = "locations_coord")
```

## Fixes

Each "fix" has been done at separate occasions.

### Update sector names

```{r}
# Replace old to new name for sectors
file_companies_updated <- file_companies %>% 
  mutate(Industry_Sector = recode(Industry_Sector,
                           "Research/Education" = "Research & Education",
                           "Legal/HR/Economics" = "Legal & Economics",
                           "Government/Public sector" = "Government & Public sector",
                           "Iron/steel/mining" = "Metals & Mining",
                           "Oil/gas/refinery" = "Fossil fuel & Refinery",
                           "Energy Utility" = "Energy utility"))
```

### Fix incorrect entries in Location of jobs

```{r}
jobs_and_locations <- file_mainpage %>% 
  left_join(file_locations, by = c("Location"="New_name"), relationship = "many-to-many") %>%
  select(Company, Country_code) %>%
  unique() %>%
  na.omit() %>%
  group_by(Company) %>%
  summarise(Country_code = paste(sort(unique(Country_code)), collapse = ", ")) %>%
  ungroup()

file_companies_updated <- file_companies %>%
  left_join(jobs_and_locations, by = c("Name" = "Company")) %>%
  select(Name, Description, Number_of_adds, Location_of_jobs = Country_code, Multinational, Organisation_type, Ownership_type, Industry_Sector, Hydrogen_relevance, Hydrogen_relevance_motivation, Hydrogen_specialist, Nationality, Founded_year)
  
```

## Upload new version

```{r}
write_sheet(file_companies_updated, ss, sheet = "CompanyAnalysis")
```

# Changes to job role

## Data

```{r}
ss <- "https://docs.google.com/spreadsheets/d/1xzpre5Ej_7OEGRU4EA7KZuMQnSz5YCyTx5Sdbml6bQE/edit#gid=0"

file_jobrole <- read_sheet(ss, sheet = "Job_roles")
```

## Fixes

Replace old to new name for job roles

```{r}
file_jobrole_updated <- file_jobrole %>% 
  mutate(Job_role = recode(Job_role,
                           "Manufacturing/Maintenance/Industrial work/Technicians" = "Technician & Maintenance",
                           "Procurement/Supply Chain Management/Logistics" = "Procurement & Logistics",
                           "Management/CEO" = "Other management",
                           "Sales/Marketing/Customer Service" = "Sales & Customer Service",
                           "IT/Data Science" = "IT & Data Science",
                           "Finance/Business development" = "Finance & Business development",
                           "Environmental/Sustainability" = "Environmental"))

file_jobrole_updated <- file_jobrole %>% 
  mutate(Job_role = recode(Job_role,
                           "IT & Data Science" = "IT & Data science",
                           "Sales & Customer Service" = "Sales & Customer service",
                           "Quality Assurance" = "Quality assurance"))
```

## Upload new version

```{r}
write_sheet(file_jobrole_updated, ss, sheet = "Job_roles")
```

# Changes to Main sheet

## Data

```{r}
ss <- "https://docs.google.com/spreadsheets/d/1xzpre5Ej_7OEGRU4EA7KZuMQnSz5YCyTx5Sdbml6bQE/edit#gid=0"

main <- read_sheet(ss, sheet = "Main")
company_names <- read_sheet(ss, sheet = "company_names")
```

## Fixes

```{r}
data_new_names <- main %>% 
  mutate(Company = case_when(tolower(str_trim(Company)) %in% tolower(company_names$Old_name) ~ company_names$New_name[match(tolower(str_trim(Company)),tolower(company_names$Old_name))], TRUE ~ "!!!NEW_COMPANY!!!"))

employstaff <- data_new_names %>% filter(Company %in% c("Employment/staffing agency"))
```

## Upload changes

```{r}
write_sheet(data_new_names, ss, sheet = "Main")
```

# Other

```{r}
fail12 <- file_mainpage %>% 
  filter(is.na(Title))
fail22 <-  file_mainpage %>% 
  filter(Company %in% c('!!!NEW_COMPANY!!!','!!!MULTIPLE_COMPANIES!!!','Employment/staffing agency'))
fail32 <- file_mainpage %>% 
  filter(Location %in% c('!!!UNKNOWN_LOCATION!!!','!!!MULTIPLE_LOCATIONS!!!','!!!NEW_LOCATION!!!'))

fail_total2 <- fail12 %>% 
  rbind(fail22) %>% 
  rbind(fail32) %>%
  unique() %>%
  arrange(ID)


a_30042_ <- read_sheet(ss, sheet = "dk_scrape") %>% filter(IDcol == 30042)

a_30042_$all_text <- paste0(a_30042_$all_text1, a_30042_$all_text2, a_30042_$all_text3) 
a_30042_ <- a_30042_[,c("IDcol","all_text",'short_text')]

# How to de-compress
decompress_string <- function(x) {
  decompressed <- memDecompress(base64decode(x), type = "gzip")
  rawToChar(decompressed)
}

a_30042_$all_text <- lapply(a_30042_$all_text, decompress_string)


main_noFail <- file_mainpage %>% 
  filter(!is.na(Title)) %>% 
  filter(!Company %in% c('!!!NEW_COMPANY!!!','!!!MULTIPLE_COMPANIES!!!','Employment/staffing agency')) %>%
  filter(!Location %in% c('!!!UNKNOWN_LOCATION!!!','!!!MULTIPLE_LOCATIONS!!!','!!!NEW_LOCATION!!!'))

se_nofail <- main_noFail %>% filter(ID < 20000)
no_nofail <- main_noFail %>% filter(ID >= 20000) %>% filter(ID < 30000)
dk_nofail <- main_noFail %>% filter(ID >= 30000)

random_se1 <- se_nofail[sample(nrow(se_nofail), 1), ] #10431
random_no1 <- no_nofail[sample(nrow(no_nofail), 1), ] #21185
random_no2 <- no_nofail[sample(nrow(no_nofail), 1), ] #20344
random_no3 <- no_nofail[sample(nrow(no_nofail), 1), ] #20931
random_no4 <- no_nofail[sample(nrow(no_nofail), 1), ] #21250
random_no5 <- no_nofail[sample(nrow(no_nofail), 1), ] #20104
random_dk1 <- dk_nofail[sample(nrow(dk_nofail), 1), ] #30732
random_dk2 <- dk_nofail[sample(nrow(dk_nofail), 1), ] #30903


#####

dk_30681 <- read_sheet(ss, sheet = "dk_scrape") %>%
  filter(IDcol == 30681)

# How to de-compress

decompress_string <- function(x) {
  decompressed <- memDecompress(base64decode(x), type = "gzip")
  rawToChar(decompressed)
}

dk_30681$all_text <- paste0(dk_30681$all_text1, dk_30681$all_text2, dk_30681$all_text3) 
dk_30681 <- dk_30681[,c("IDcol","all_text",'short_text')]

dk_30681$all_text <- lapply(dk_30681$all_text, decompress_string)


```
